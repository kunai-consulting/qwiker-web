name: Kun.ai Build and Deploy to S3

on:
  push:
    paths:
      - 'kun-ai/**'
    branches:
      - main

  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'kun-ai/**'
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'kun-ai/package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
         run: npm run build.all

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ secrets.KUN_AI_BUCKET }}

      # - name: Count Commits Since Last Merge with Main
      #   id: pr_commits
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     COMMIT_COUNT=$(git rev-list --count HEAD ^$(git merge-base HEAD origin/main))
      #     echo "Number of commits since last merge with main: $COMMIT_COUNT"
      #     echo "::set-output name=count::$COMMIT_COUNT"

      # - name: Detect Changed Directories and Construct Preview URLs
      #   if: github.event_name == 'pull_request'
      #   id: detect_changes
      #   run: |
      #     # Detect changes in the specific directory
      #     # CHANGED_DIRS=$(git diff --name-only HEAD~${{ steps.pr_commits.outputs.count }} HEAD | grep '^src/routes/(dev)/[a-z]' | sed -E 's|src/routes/\(dev\)/([^/]+).*|\1|' | sort -u | grep -v '\.tsx$')
      #     # echo "Changed directories: $CHANGED_DIRS"

      #     # Base Preview URL
      #     BASE_PREVIEW_URL="https://${{ secrets.VITE_ORIGIN_URL }}/${{ github.event.pull_request.head.ref }}"

      #     # Construct Preview URLs
      #     PREVIEW_URLS=$BASE_PREVIEW_URL
      #     # if [ -z "$CHANGED_DIRS" ]; then
      #     #   PREVIEW_URLS=$BASE_PREVIEW_URL
      #     # else
      #     #   for dir in $CHANGED_DIRS; do
      #     #     PREVIEW_URL="$BASE_PREVIEW_URL/$dir"
      #     #     PREVIEW_URLS+="$PREVIEW_URL, "
      #     #   done
      #     # fi

      #     # Trim the trailing comma and space
      #     # PREVIEW_URLS=$(echo $PREVIEW_URLS | sed 's/, $//')

      #     # Set output variable
      #     echo "::set-output name=preview_urls::${PREVIEW_URLS}"

      - name: Invalidate Entire CloudFront Cache for Main
        if: github.ref == 'refs/heads/main'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.KUN_ID_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      # - name: Create or Update Comment with Preview URLs
      #   if: github.event_name == 'pull_request'
      #   uses: peter-evans/create-or-update-comment@v1
      #   with:
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       Preview URL: 
      #       [${{ secrets.VITE_ORIGIN_URL }}/${{ github.event.pull_request.head.ref }}](https://${{ secrets.VITE_ORIGIN_URL }}/${{ github.event.pull_request.head.ref }})

      #       [${{ secrets.VITE_AWS_ORIGIN_URL }}/${{ github.event.pull_request.head.ref }}](https://${{ secrets.VITE_AWS_ORIGIN_URL }}/${{ github.event.pull_request.head.ref }})

      #       :rocket: Deployment successful!
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     reaction-type: 'rocket'
